{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Line } from './Line.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nimport { Path } from './Path.js';\nexport class Arrow extends Line {\n  _sceneFunc(ctx) {\n    super._sceneFunc(ctx);\n    var PI2 = Math.PI * 2;\n    var points = this.points();\n    var tp = points;\n    var fromTension = this.tension() !== 0 && points.length > 4;\n    if (fromTension) {\n      tp = this.getTensionPoints();\n    }\n    var length = this.pointerLength();\n    var n = points.length;\n    var dx, dy;\n    if (fromTension) {\n      const lp = [tp[tp.length - 4], tp[tp.length - 3], tp[tp.length - 2], tp[tp.length - 1], points[n - 2], points[n - 1]];\n      const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n      const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n      dx = points[n - 2] - previous.x;\n      dy = points[n - 1] - previous.y;\n    } else {\n      dx = points[n - 2] - points[n - 4];\n      dy = points[n - 1] - points[n - 3];\n    }\n    var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n    var width = this.pointerWidth();\n    if (this.pointerAtEnding()) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[n - 2], points[n - 1]);\n      ctx.rotate(radians);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n      this.__fillStroke(ctx);\n    }\n    if (this.pointerAtBeginning()) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[0], points[1]);\n      if (fromTension) {\n        dx = (tp[0] + tp[2]) / 2 - points[0];\n        dy = (tp[1] + tp[3]) / 2 - points[1];\n      } else {\n        dx = points[2] - points[0];\n        dy = points[3] - points[1];\n      }\n      ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n      this.__fillStroke(ctx);\n    }\n  }\n  __fillStroke(ctx) {\n    var isDashEnabled = this.dashEnabled();\n    if (isDashEnabled) {\n      this.attrs.dashEnabled = false;\n      ctx.setLineDash([]);\n    }\n    ctx.fillStrokeShape(this);\n    if (isDashEnabled) {\n      this.attrs.dashEnabled = true;\n    }\n  }\n  getSelfRect() {\n    const lineRect = super.getSelfRect();\n    const offset = this.pointerWidth() / 2;\n    return {\n      x: lineRect.x - offset,\n      y: lineRect.y - offset,\n      width: lineRect.width + offset * 2,\n      height: lineRect.height + offset * 2\n    };\n  }\n}\nArrow.prototype.className = 'Arrow';\n_registerNode(Arrow);\nFactory.addGetterSetter(Arrow, 'pointerLength', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerWidth', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory.addGetterSetter(Arrow, 'pointerAtEnding', true);","map":{"version":3,"names":["Factory","Line","getNumberValidator","_registerNode","Path","Arrow","_sceneFunc","ctx","PI2","Math","PI","points","tp","fromTension","tension","length","getTensionPoints","pointerLength","n","dx","dy","lp","lastLength","calcLength","previous","getPointOnQuadraticBezier","min","x","y","radians","atan2","width","pointerWidth","pointerAtEnding","save","beginPath","translate","rotate","moveTo","lineTo","closePath","restore","__fillStroke","pointerAtBeginning","isDashEnabled","dashEnabled","attrs","setLineDash","fillStrokeShape","getSelfRect","lineRect","offset","height","prototype","className","addGetterSetter"],"sources":["/Users/takahiro/Dev/webhack/node_modules/konva/lib/shapes/Arrow.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Line } from './Line.js';\nimport { getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nimport { Path } from './Path.js';\nexport class Arrow extends Line {\n    _sceneFunc(ctx) {\n        super._sceneFunc(ctx);\n        var PI2 = Math.PI * 2;\n        var points = this.points();\n        var tp = points;\n        var fromTension = this.tension() !== 0 && points.length > 4;\n        if (fromTension) {\n            tp = this.getTensionPoints();\n        }\n        var length = this.pointerLength();\n        var n = points.length;\n        var dx, dy;\n        if (fromTension) {\n            const lp = [\n                tp[tp.length - 4],\n                tp[tp.length - 3],\n                tp[tp.length - 2],\n                tp[tp.length - 1],\n                points[n - 2],\n                points[n - 1],\n            ];\n            const lastLength = Path.calcLength(tp[tp.length - 4], tp[tp.length - 3], 'C', lp);\n            const previous = Path.getPointOnQuadraticBezier(Math.min(1, 1 - length / lastLength), lp[0], lp[1], lp[2], lp[3], lp[4], lp[5]);\n            dx = points[n - 2] - previous.x;\n            dy = points[n - 1] - previous.y;\n        }\n        else {\n            dx = points[n - 2] - points[n - 4];\n            dy = points[n - 1] - points[n - 3];\n        }\n        var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n        var width = this.pointerWidth();\n        if (this.pointerAtEnding()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[n - 2], points[n - 1]);\n            ctx.rotate(radians);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n        if (this.pointerAtBeginning()) {\n            ctx.save();\n            ctx.beginPath();\n            ctx.translate(points[0], points[1]);\n            if (fromTension) {\n                dx = (tp[0] + tp[2]) / 2 - points[0];\n                dy = (tp[1] + tp[3]) / 2 - points[1];\n            }\n            else {\n                dx = points[2] - points[0];\n                dy = points[3] - points[1];\n            }\n            ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n            ctx.moveTo(0, 0);\n            ctx.lineTo(-length, width / 2);\n            ctx.lineTo(-length, -width / 2);\n            ctx.closePath();\n            ctx.restore();\n            this.__fillStroke(ctx);\n        }\n    }\n    __fillStroke(ctx) {\n        var isDashEnabled = this.dashEnabled();\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = false;\n            ctx.setLineDash([]);\n        }\n        ctx.fillStrokeShape(this);\n        if (isDashEnabled) {\n            this.attrs.dashEnabled = true;\n        }\n    }\n    getSelfRect() {\n        const lineRect = super.getSelfRect();\n        const offset = this.pointerWidth() / 2;\n        return {\n            x: lineRect.x - offset,\n            y: lineRect.y - offset,\n            width: lineRect.width + offset * 2,\n            height: lineRect.height + offset * 2,\n        };\n    }\n}\nArrow.prototype.className = 'Arrow';\n_registerNode(Arrow);\nFactory.addGetterSetter(Arrow, 'pointerLength', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerWidth', 10, getNumberValidator());\nFactory.addGetterSetter(Arrow, 'pointerAtBeginning', false);\nFactory.addGetterSetter(Arrow, 'pointerAtEnding', true);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}