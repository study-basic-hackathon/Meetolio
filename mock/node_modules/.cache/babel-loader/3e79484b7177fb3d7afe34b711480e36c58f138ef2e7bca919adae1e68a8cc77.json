{"ast":null,"code":"import { Util } from './Util.js';\nimport { getComponentValidator } from './Validators.js';\nvar GET = 'get',\n  SET = 'set';\nexport const Factory = {\n  addGetterSetter(constructor, attr, def, validator, after) {\n    Factory.addGetter(constructor, attr, def);\n    Factory.addSetter(constructor, attr, validator, after);\n    Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n  addGetter(constructor, attr, def) {\n    var method = GET + Util._capitalize(attr);\n    constructor.prototype[method] = constructor.prototype[method] || function () {\n      var val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n  },\n  addSetter(constructor, attr, validator, after) {\n    var method = SET + Util._capitalize(attr);\n    if (!constructor.prototype[method]) {\n      Factory.overWriteSetter(constructor, attr, validator, after);\n    }\n  },\n  overWriteSetter(constructor, attr, validator, after) {\n    var method = SET + Util._capitalize(attr);\n    constructor.prototype[method] = function (val) {\n      if (validator && val !== undefined && val !== null) {\n        val = validator.call(this, val, attr);\n      }\n      this._setAttr(attr, val);\n      if (after) {\n        after.call(this);\n      }\n      return this;\n    };\n  },\n  addComponentsGetterSetter(constructor, attr, components, validator, after) {\n    var len = components.length,\n      capitalize = Util._capitalize,\n      getter = GET + capitalize(attr),\n      setter = SET + capitalize(attr),\n      n,\n      component;\n    constructor.prototype[getter] = function () {\n      var ret = {};\n      for (n = 0; n < len; n++) {\n        component = components[n];\n        ret[component] = this.getAttr(attr + capitalize(component));\n      }\n      return ret;\n    };\n    var basicValidator = getComponentValidator(components);\n    constructor.prototype[setter] = function (val) {\n      var oldVal = this.attrs[attr],\n        key;\n      if (validator) {\n        val = validator.call(this, val);\n      }\n      if (basicValidator) {\n        basicValidator.call(this, val, attr);\n      }\n      for (key in val) {\n        if (!val.hasOwnProperty(key)) {\n          continue;\n        }\n        this._setAttr(attr + capitalize(key), val[key]);\n      }\n      if (!val) {\n        components.forEach(component => {\n          this._setAttr(attr + capitalize(component), undefined);\n        });\n      }\n      this._fireChangeEvent(attr, oldVal, val);\n      if (after) {\n        after.call(this);\n      }\n      return this;\n    };\n    Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n  addOverloadedGetterSetter(constructor, attr) {\n    var capitalizedAttr = Util._capitalize(attr),\n      setter = SET + capitalizedAttr,\n      getter = GET + capitalizedAttr;\n    constructor.prototype[attr] = function () {\n      if (arguments.length) {\n        this[setter](arguments[0]);\n        return this;\n      }\n      return this[getter]();\n    };\n  },\n  addDeprecatedGetterSetter(constructor, attr, def, validator) {\n    Util.error('Adding deprecated ' + attr);\n    var method = GET + Util._capitalize(attr);\n    var message = attr + ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n    constructor.prototype[method] = function () {\n      Util.error(message);\n      var val = this.attrs[attr];\n      return val === undefined ? def : val;\n    };\n    Factory.addSetter(constructor, attr, validator, function () {\n      Util.error(message);\n    });\n    Factory.addOverloadedGetterSetter(constructor, attr);\n  },\n  backCompat(constructor, methods) {\n    Util.each(methods, function (oldMethodName, newMethodName) {\n      var method = constructor.prototype[newMethodName];\n      var oldGetter = GET + Util._capitalize(oldMethodName);\n      var oldSetter = SET + Util._capitalize(oldMethodName);\n      function deprecated() {\n        method.apply(this, arguments);\n        Util.error('\"' + oldMethodName + '\" method is deprecated and will be removed soon. Use \"\"' + newMethodName + '\" instead.');\n      }\n      constructor.prototype[oldMethodName] = deprecated;\n      constructor.prototype[oldGetter] = deprecated;\n      constructor.prototype[oldSetter] = deprecated;\n    });\n  },\n  afterSetFilter() {\n    this._filterUpToDate = false;\n  }\n};","map":{"version":3,"names":["Util","getComponentValidator","GET","SET","Factory","addGetterSetter","constructor","attr","def","validator","after","addGetter","addSetter","addOverloadedGetterSetter","method","_capitalize","prototype","val","attrs","undefined","overWriteSetter","call","_setAttr","addComponentsGetterSetter","components","len","length","capitalize","getter","setter","n","component","ret","getAttr","basicValidator","oldVal","key","hasOwnProperty","forEach","_fireChangeEvent","capitalizedAttr","arguments","addDeprecatedGetterSetter","error","message","backCompat","methods","each","oldMethodName","newMethodName","oldGetter","oldSetter","deprecated","apply","afterSetFilter","_filterUpToDate"],"sources":["/Users/takahiro/Dev/webhack/node_modules/konva/lib/Factory.js"],"sourcesContent":["import { Util } from './Util.js';\nimport { getComponentValidator } from './Validators.js';\nvar GET = 'get', SET = 'set';\nexport const Factory = {\n    addGetterSetter(constructor, attr, def, validator, after) {\n        Factory.addGetter(constructor, attr, def);\n        Factory.addSetter(constructor, attr, validator, after);\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter(constructor, attr, def) {\n        var method = GET + Util._capitalize(attr);\n        constructor.prototype[method] =\n            constructor.prototype[method] ||\n                function () {\n                    var val = this.attrs[attr];\n                    return val === undefined ? def : val;\n                };\n    },\n    addSetter(constructor, attr, validator, after) {\n        var method = SET + Util._capitalize(attr);\n        if (!constructor.prototype[method]) {\n            Factory.overWriteSetter(constructor, attr, validator, after);\n        }\n    },\n    overWriteSetter(constructor, attr, validator, after) {\n        var method = SET + Util._capitalize(attr);\n        constructor.prototype[method] = function (val) {\n            if (validator && val !== undefined && val !== null) {\n                val = validator.call(this, val, attr);\n            }\n            this._setAttr(attr, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n    },\n    addComponentsGetterSetter(constructor, attr, components, validator, after) {\n        var len = components.length, capitalize = Util._capitalize, getter = GET + capitalize(attr), setter = SET + capitalize(attr), n, component;\n        constructor.prototype[getter] = function () {\n            var ret = {};\n            for (n = 0; n < len; n++) {\n                component = components[n];\n                ret[component] = this.getAttr(attr + capitalize(component));\n            }\n            return ret;\n        };\n        var basicValidator = getComponentValidator(components);\n        constructor.prototype[setter] = function (val) {\n            var oldVal = this.attrs[attr], key;\n            if (validator) {\n                val = validator.call(this, val);\n            }\n            if (basicValidator) {\n                basicValidator.call(this, val, attr);\n            }\n            for (key in val) {\n                if (!val.hasOwnProperty(key)) {\n                    continue;\n                }\n                this._setAttr(attr + capitalize(key), val[key]);\n            }\n            if (!val) {\n                components.forEach((component) => {\n                    this._setAttr(attr + capitalize(component), undefined);\n                });\n            }\n            this._fireChangeEvent(attr, oldVal, val);\n            if (after) {\n                after.call(this);\n            }\n            return this;\n        };\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter(constructor, attr) {\n        var capitalizedAttr = Util._capitalize(attr), setter = SET + capitalizedAttr, getter = GET + capitalizedAttr;\n        constructor.prototype[attr] = function () {\n            if (arguments.length) {\n                this[setter](arguments[0]);\n                return this;\n            }\n            return this[getter]();\n        };\n    },\n    addDeprecatedGetterSetter(constructor, attr, def, validator) {\n        Util.error('Adding deprecated ' + attr);\n        var method = GET + Util._capitalize(attr);\n        var message = attr +\n            ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n        constructor.prototype[method] = function () {\n            Util.error(message);\n            var val = this.attrs[attr];\n            return val === undefined ? def : val;\n        };\n        Factory.addSetter(constructor, attr, validator, function () {\n            Util.error(message);\n        });\n        Factory.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat(constructor, methods) {\n        Util.each(methods, function (oldMethodName, newMethodName) {\n            var method = constructor.prototype[newMethodName];\n            var oldGetter = GET + Util._capitalize(oldMethodName);\n            var oldSetter = SET + Util._capitalize(oldMethodName);\n            function deprecated() {\n                method.apply(this, arguments);\n                Util.error('\"' +\n                    oldMethodName +\n                    '\" method is deprecated and will be removed soon. Use \"\"' +\n                    newMethodName +\n                    '\" instead.');\n            }\n            constructor.prototype[oldMethodName] = deprecated;\n            constructor.prototype[oldGetter] = deprecated;\n            constructor.prototype[oldSetter] = deprecated;\n        });\n    },\n    afterSetFilter() {\n        this._filterUpToDate = false;\n    },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}