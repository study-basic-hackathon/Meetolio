{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator, getBooleanValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Arc extends Shape {\n  _sceneFunc(context) {\n    var angle = Konva.getAngle(this.angle()),\n      clockwise = this.clockwise();\n    context.beginPath();\n    context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n    context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getWidth() {\n    return this.outerRadius() * 2;\n  }\n  getHeight() {\n    return this.outerRadius() * 2;\n  }\n  setWidth(width) {\n    this.outerRadius(width / 2);\n  }\n  setHeight(height) {\n    this.outerRadius(height / 2);\n  }\n  getSelfRect() {\n    const innerRadius = this.innerRadius();\n    const outerRadius = this.outerRadius();\n    const clockwise = this.clockwise();\n    const angle = Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n    const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n    const boundRightRatio = 1;\n    const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), 3 * Math.PI / 2));\n    const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n    const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n    const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n    const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n    const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n    return {\n      x: boundLeft,\n      y: clockwise ? -1 * boundBottom : boundTop,\n      width: boundRight - boundLeft,\n      height: boundBottom - boundTop\n    };\n  }\n}\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Arc);\nFactory.addGetterSetter(Arc, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'outerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'clockwise', false, getBooleanValidator());","map":{"version":3,"names":["Factory","Shape","Konva","getNumberValidator","getBooleanValidator","_registerNode","Arc","_sceneFunc","context","angle","getAngle","clockwise","beginPath","arc","outerRadius","innerRadius","closePath","fillStrokeShape","getWidth","getHeight","setWidth","width","setHeight","height","getSelfRect","boundLeftRatio","Math","cos","min","PI","boundRightRatio","boundTopRatio","sin","max","boundBottomRatio","boundLeft","boundRight","boundTop","boundBottom","x","y","prototype","_centroid","className","_attrsAffectingSize","addGetterSetter"],"sources":["/Users/takahiro/Dev/webhack/node_modules/konva/lib/shapes/Arc.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Konva } from '../Global.js';\nimport { getNumberValidator, getBooleanValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nexport class Arc extends Shape {\n    _sceneFunc(context) {\n        var angle = Konva.getAngle(this.angle()), clockwise = this.clockwise();\n        context.beginPath();\n        context.arc(0, 0, this.outerRadius(), 0, angle, clockwise);\n        context.arc(0, 0, this.innerRadius(), angle, 0, !clockwise);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getWidth() {\n        return this.outerRadius() * 2;\n    }\n    getHeight() {\n        return this.outerRadius() * 2;\n    }\n    setWidth(width) {\n        this.outerRadius(width / 2);\n    }\n    setHeight(height) {\n        this.outerRadius(height / 2);\n    }\n    getSelfRect() {\n        const innerRadius = this.innerRadius();\n        const outerRadius = this.outerRadius();\n        const clockwise = this.clockwise();\n        const angle = Konva.getAngle(clockwise ? 360 - this.angle() : this.angle());\n        const boundLeftRatio = Math.cos(Math.min(angle, Math.PI));\n        const boundRightRatio = 1;\n        const boundTopRatio = Math.sin(Math.min(Math.max(Math.PI, angle), (3 * Math.PI) / 2));\n        const boundBottomRatio = Math.sin(Math.min(angle, Math.PI / 2));\n        const boundLeft = boundLeftRatio * (boundLeftRatio > 0 ? innerRadius : outerRadius);\n        const boundRight = boundRightRatio * (boundRightRatio > 0 ? outerRadius : innerRadius);\n        const boundTop = boundTopRatio * (boundTopRatio > 0 ? innerRadius : outerRadius);\n        const boundBottom = boundBottomRatio * (boundBottomRatio > 0 ? outerRadius : innerRadius);\n        return {\n            x: boundLeft,\n            y: clockwise ? -1 * boundBottom : boundTop,\n            width: boundRight - boundLeft,\n            height: boundBottom - boundTop,\n        };\n    }\n}\nArc.prototype._centroid = true;\nArc.prototype.className = 'Arc';\nArc.prototype._attrsAffectingSize = ['innerRadius', 'outerRadius'];\n_registerNode(Arc);\nFactory.addGetterSetter(Arc, 'innerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'outerRadius', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'angle', 0, getNumberValidator());\nFactory.addGetterSetter(Arc, 'clockwise', false, getBooleanValidator());\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}