{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import{useAuth}from\"../contexts/AuthContext\";import\"./Settings.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Settings=()=>{const{user,logout}=useAuth();const navigate=useNavigate();// メールアドレス変更\nconst[showEmailChange,setShowEmailChange]=useState(false);const[emailForm,setEmailForm]=useState({currentEmail:(user===null||user===void 0?void 0:user.email)||\"\",newEmail:\"\",password:\"\"});const[isChangingEmail,setIsChangingEmail]=useState(false);// パスワード変更\nconst[showPasswordChange,setShowPasswordChange]=useState(false);const[passwordForm,setPasswordForm]=useState({currentPassword:\"\",newPassword:\"\",confirmNewPassword:\"\"});const[isChangingPassword,setIsChangingPassword]=useState(false);// 退会処理\nconst[showDeleteConfirm,setShowDeleteConfirm]=useState(false);const[deleteForm,setDeleteForm]=useState({reason:\"\",password:\"\"});const[isDeletingAccount,setIsDeletingAccount]=useState(false);// メールアドレス変更\nconst handleEmailChange=async()=>{if(!emailForm.newEmail||!emailForm.password){alert(\"新しいメールアドレスとパスワードを入力してください\");return;}if(emailForm.newEmail===emailForm.currentEmail){alert(\"新しいメールアドレスが現在のものと同じです\");return;}setIsChangingEmail(true);try{// モックAPI呼び出し\nawait new Promise(resolve=>setTimeout(resolve,1000));// 成功時の処理\nalert(\"メールアドレスが変更されました\");setShowEmailChange(false);setEmailForm({currentEmail:emailForm.newEmail,newEmail:\"\",password:\"\"});}catch(error){alert(\"メールアドレスの変更に失敗しました\");}finally{setIsChangingEmail(false);}};// パスワード変更\nconst handlePasswordChange=async()=>{if(!passwordForm.currentPassword||!passwordForm.newPassword||!passwordForm.confirmNewPassword){alert(\"すべてのフィールドを入力してください\");return;}if(passwordForm.newPassword!==passwordForm.confirmNewPassword){alert(\"新しいパスワードが一致しません\");return;}if(passwordForm.newPassword.length<6){alert(\"新しいパスワードは6文字以上で入力してください\");return;}setIsChangingPassword(true);try{// モックAPI呼び出し\nawait new Promise(resolve=>setTimeout(resolve,1000));// 成功時の処理\nalert(\"パスワードが変更されました\");setShowPasswordChange(false);setPasswordForm({currentPassword:\"\",newPassword:\"\",confirmNewPassword:\"\"});}catch(error){alert(\"パスワードの変更に失敗しました\");}finally{setIsChangingPassword(false);}};// 退会処理\nconst handleDeleteAccount=async()=>{if(!deleteForm.reason||!deleteForm.password){alert(\"退会理由とパスワードを入力してください\");return;}if(window.confirm(\"本当にアカウントを削除しますか？この操作は取り消せません。\")){setIsDeletingAccount(true);try{// モックAPI呼び出し\nawait new Promise(resolve=>setTimeout(resolve,1000));// 成功時の処理\nalert(\"アカウントが削除されました\");logout();navigate(\"/login\");}catch(error){alert(\"アカウントの削除に失敗しました\");}finally{setIsDeletingAccount(false);}}};if(!user){return null;}return/*#__PURE__*/_jsx(\"div\",{className:\"settings\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"settings-content\",children:/*#__PURE__*/_jsx(\"div\",{className:\"settings-main\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"settings-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"settings-title\",children:\"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u8A2D\\u5B9A\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-item clickable\",onClick:()=>navigate(\"/settings/email\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"account-item-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"account-item-label\",children:\"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\"}),/*#__PURE__*/_jsx(\"div\",{className:\"account-item-value\",children:user.email})]}),/*#__PURE__*/_jsx(\"div\",{className:\"account-change-hint\",children:\"\\u5909\\u66F4 >\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"account-item clickable\",onClick:()=>navigate(\"/settings/password\"),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"account-item-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"account-item-label\",children:\"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\"}),/*#__PURE__*/_jsx(\"div\",{className:\"account-item-value\",children:\"********\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"account-change-hint\",children:\"\\u5909\\u66F4 >\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"account-item clickable\",onClick:()=>navigate(\"/settings/delete\"),children:/*#__PURE__*/_jsxs(\"div\",{className:\"account-item-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"account-item-label\",children:\"\\u9000\\u4F1A\\u51E6\\u7406\"}),/*#__PURE__*/_jsx(\"div\",{className:\"account-item-value\",children:\"\\u30A2\\u30AB\\u30A6\\u30F3\\u30C8\\u3092\\u524A\\u9664\"})]})})]})})})})});};export default Settings;","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","Settings","user","logout","navigate","showEmailChange","setShowEmailChange","emailForm","setEmailForm","currentEmail","email","newEmail","password","isChangingEmail","setIsChangingEmail","showPasswordChange","setShowPasswordChange","passwordForm","setPasswordForm","currentPassword","newPassword","confirmNewPassword","isChangingPassword","setIsChangingPassword","showDeleteConfirm","setShowDeleteConfirm","deleteForm","setDeleteForm","reason","isDeletingAccount","setIsDeletingAccount","handleEmailChange","alert","Promise","resolve","setTimeout","error","handlePasswordChange","length","handleDeleteAccount","window","confirm","className","children","onClick"],"sources":["/Users/takahiro/Dev/webhack/src/pages/Settings.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport {\n  ChangeEmailForm,\n  ChangePasswordForm,\n  DeleteAccountForm,\n} from \"../types\";\nimport \"./Settings.css\";\n\nconst Settings: React.FC = () => {\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  // メールアドレス変更\n  const [showEmailChange, setShowEmailChange] = useState(false);\n  const [emailForm, setEmailForm] = useState<ChangeEmailForm>({\n    currentEmail: user?.email || \"\",\n    newEmail: \"\",\n    password: \"\",\n  });\n  const [isChangingEmail, setIsChangingEmail] = useState(false);\n\n  // パスワード変更\n  const [showPasswordChange, setShowPasswordChange] = useState(false);\n  const [passwordForm, setPasswordForm] = useState<ChangePasswordForm>({\n    currentPassword: \"\",\n    newPassword: \"\",\n    confirmNewPassword: \"\",\n  });\n  const [isChangingPassword, setIsChangingPassword] = useState(false);\n\n  // 退会処理\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [deleteForm, setDeleteForm] = useState<DeleteAccountForm>({\n    reason: \"\",\n    password: \"\",\n  });\n  const [isDeletingAccount, setIsDeletingAccount] = useState(false);\n\n  // メールアドレス変更\n  const handleEmailChange = async () => {\n    if (!emailForm.newEmail || !emailForm.password) {\n      alert(\"新しいメールアドレスとパスワードを入力してください\");\n      return;\n    }\n\n    if (emailForm.newEmail === emailForm.currentEmail) {\n      alert(\"新しいメールアドレスが現在のものと同じです\");\n      return;\n    }\n\n    setIsChangingEmail(true);\n    try {\n      // モックAPI呼び出し\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // 成功時の処理\n      alert(\"メールアドレスが変更されました\");\n      setShowEmailChange(false);\n      setEmailForm({\n        currentEmail: emailForm.newEmail,\n        newEmail: \"\",\n        password: \"\",\n      });\n    } catch (error) {\n      alert(\"メールアドレスの変更に失敗しました\");\n    } finally {\n      setIsChangingEmail(false);\n    }\n  };\n\n  // パスワード変更\n  const handlePasswordChange = async () => {\n    if (\n      !passwordForm.currentPassword ||\n      !passwordForm.newPassword ||\n      !passwordForm.confirmNewPassword\n    ) {\n      alert(\"すべてのフィールドを入力してください\");\n      return;\n    }\n\n    if (passwordForm.newPassword !== passwordForm.confirmNewPassword) {\n      alert(\"新しいパスワードが一致しません\");\n      return;\n    }\n\n    if (passwordForm.newPassword.length < 6) {\n      alert(\"新しいパスワードは6文字以上で入力してください\");\n      return;\n    }\n\n    setIsChangingPassword(true);\n    try {\n      // モックAPI呼び出し\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // 成功時の処理\n      alert(\"パスワードが変更されました\");\n      setShowPasswordChange(false);\n      setPasswordForm({\n        currentPassword: \"\",\n        newPassword: \"\",\n        confirmNewPassword: \"\",\n      });\n    } catch (error) {\n      alert(\"パスワードの変更に失敗しました\");\n    } finally {\n      setIsChangingPassword(false);\n    }\n  };\n\n  // 退会処理\n  const handleDeleteAccount = async () => {\n    if (!deleteForm.reason || !deleteForm.password) {\n      alert(\"退会理由とパスワードを入力してください\");\n      return;\n    }\n\n    if (\n      window.confirm(\n        \"本当にアカウントを削除しますか？この操作は取り消せません。\"\n      )\n    ) {\n      setIsDeletingAccount(true);\n      try {\n        // モックAPI呼び出し\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n\n        // 成功時の処理\n        alert(\"アカウントが削除されました\");\n        logout();\n        navigate(\"/login\");\n      } catch (error) {\n        alert(\"アカウントの削除に失敗しました\");\n      } finally {\n        setIsDeletingAccount(false);\n      }\n    }\n  };\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"settings\">\n      <div className=\"container\">\n        <div className=\"settings-content\">\n          <div className=\"settings-main\">\n            <div className=\"settings-section\">\n              <h2 className=\"settings-title\">アカウント設定</h2>\n\n                             {/* メールアドレス変更 */}\n               <div\n                 className=\"account-item clickable\"\n                 onClick={() => navigate(\"/settings/email\")}\n               >\n                 <div className=\"account-item-content\">\n                   <div className=\"account-item-label\">メールアドレス</div>\n                   <div className=\"account-item-value\">{user.email}</div>\n                 </div>\n                 <div className=\"account-change-hint\">変更 &gt;</div>\n               </div>\n\n              \n\n                             {/* パスワード変更 */}\n               <div\n                 className=\"account-item clickable\"\n                 onClick={() => navigate(\"/settings/password\")}\n               >\n                 <div className=\"account-item-content\">\n                   <div className=\"account-item-label\">パスワード</div>\n                   <div className=\"account-item-value\">********</div>\n                 </div>\n                 <div className=\"account-change-hint\">変更 &gt;</div>\n               </div>\n\n              \n\n                             {/* 退会処理 */}\n               <div\n                 className=\"account-item clickable\"\n                 onClick={() => navigate(\"/settings/delete\")}\n               >\n                 <div className=\"account-item-content\">\n                   <div className=\"account-item-label\">退会処理</div>\n                   <div className=\"account-item-value\">アカウントを削除</div>\n                 </div>\n               </div>\n\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}