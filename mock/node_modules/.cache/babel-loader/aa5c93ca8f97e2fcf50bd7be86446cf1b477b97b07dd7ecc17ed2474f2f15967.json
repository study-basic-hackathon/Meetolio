{"ast":null,"code":"import { Konva } from './Global.js';\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Konva._global['PointerEvent'] !== undefined;\nexport function getCapturedShape(pointerId) {\n  return Captures.get(pointerId);\n}\nexport function createEvent(evt) {\n  return {\n    evt,\n    pointerId: evt.pointerId\n  };\n}\nexport function hasPointerCapture(pointerId, shape) {\n  return Captures.get(pointerId) === shape;\n}\nexport function setPointerCapture(pointerId, shape) {\n  releaseCapture(pointerId);\n  const stage = shape.getStage();\n  if (!stage) return;\n  Captures.set(pointerId, shape);\n  if (SUPPORT_POINTER_EVENTS) {\n    shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n  }\n}\nexport function releaseCapture(pointerId, target) {\n  const shape = Captures.get(pointerId);\n  if (!shape) return;\n  const stage = shape.getStage();\n  if (stage && stage.content) {}\n  Captures.delete(pointerId);\n  if (SUPPORT_POINTER_EVENTS) {\n    shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n  }\n}","map":{"version":3,"names":["Konva","Captures","Map","SUPPORT_POINTER_EVENTS","_global","undefined","getCapturedShape","pointerId","get","createEvent","evt","hasPointerCapture","shape","setPointerCapture","releaseCapture","stage","getStage","set","_fire","PointerEvent","target","content","delete"],"sources":["/Users/takahiro/Dev/webhack/node_modules/konva/lib/PointerEvents.js"],"sourcesContent":["import { Konva } from './Global.js';\nconst Captures = new Map();\nconst SUPPORT_POINTER_EVENTS = Konva._global['PointerEvent'] !== undefined;\nexport function getCapturedShape(pointerId) {\n    return Captures.get(pointerId);\n}\nexport function createEvent(evt) {\n    return {\n        evt,\n        pointerId: evt.pointerId,\n    };\n}\nexport function hasPointerCapture(pointerId, shape) {\n    return Captures.get(pointerId) === shape;\n}\nexport function setPointerCapture(pointerId, shape) {\n    releaseCapture(pointerId);\n    const stage = shape.getStage();\n    if (!stage)\n        return;\n    Captures.set(pointerId, shape);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('gotpointercapture', createEvent(new PointerEvent('gotpointercapture')));\n    }\n}\nexport function releaseCapture(pointerId, target) {\n    const shape = Captures.get(pointerId);\n    if (!shape)\n        return;\n    const stage = shape.getStage();\n    if (stage && stage.content) {\n    }\n    Captures.delete(pointerId);\n    if (SUPPORT_POINTER_EVENTS) {\n        shape._fire('lostpointercapture', createEvent(new PointerEvent('lostpointercapture')));\n    }\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,aAAa;AACnC,MAAMC,QAAQ,GAAG,IAAIC,GAAG,CAAC,CAAC;AAC1B,MAAMC,sBAAsB,GAAGH,KAAK,CAACI,OAAO,CAAC,cAAc,CAAC,KAAKC,SAAS;AAC1E,OAAO,SAASC,gBAAgBA,CAACC,SAAS,EAAE;EACxC,OAAON,QAAQ,CAACO,GAAG,CAACD,SAAS,CAAC;AAClC;AACA,OAAO,SAASE,WAAWA,CAACC,GAAG,EAAE;EAC7B,OAAO;IACHA,GAAG;IACHH,SAAS,EAAEG,GAAG,CAACH;EACnB,CAAC;AACL;AACA,OAAO,SAASI,iBAAiBA,CAACJ,SAAS,EAAEK,KAAK,EAAE;EAChD,OAAOX,QAAQ,CAACO,GAAG,CAACD,SAAS,CAAC,KAAKK,KAAK;AAC5C;AACA,OAAO,SAASC,iBAAiBA,CAACN,SAAS,EAAEK,KAAK,EAAE;EAChDE,cAAc,CAACP,SAAS,CAAC;EACzB,MAAMQ,KAAK,GAAGH,KAAK,CAACI,QAAQ,CAAC,CAAC;EAC9B,IAAI,CAACD,KAAK,EACN;EACJd,QAAQ,CAACgB,GAAG,CAACV,SAAS,EAAEK,KAAK,CAAC;EAC9B,IAAIT,sBAAsB,EAAE;IACxBS,KAAK,CAACM,KAAK,CAAC,mBAAmB,EAAET,WAAW,CAAC,IAAIU,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;EACxF;AACJ;AACA,OAAO,SAASL,cAAcA,CAACP,SAAS,EAAEa,MAAM,EAAE;EAC9C,MAAMR,KAAK,GAAGX,QAAQ,CAACO,GAAG,CAACD,SAAS,CAAC;EACrC,IAAI,CAACK,KAAK,EACN;EACJ,MAAMG,KAAK,GAAGH,KAAK,CAACI,QAAQ,CAAC,CAAC;EAC9B,IAAID,KAAK,IAAIA,KAAK,CAACM,OAAO,EAAE,CAC5B;EACApB,QAAQ,CAACqB,MAAM,CAACf,SAAS,CAAC;EAC1B,IAAIJ,sBAAsB,EAAE;IACxBS,KAAK,CAACM,KAAK,CAAC,oBAAoB,EAAET,WAAW,CAAC,IAAIU,YAAY,CAAC,oBAAoB,CAAC,CAAC,CAAC;EAC1F;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}