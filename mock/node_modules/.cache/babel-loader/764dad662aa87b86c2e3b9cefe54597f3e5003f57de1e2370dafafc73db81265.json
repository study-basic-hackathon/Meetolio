{"ast":null,"code":"import { Konva } from './Global.js';\nimport { Util } from './Util.js';\nfunction _formatValue(val) {\n  if (Util._isString(val)) {\n    return '\"' + val + '\"';\n  }\n  if (Object.prototype.toString.call(val) === '[object Number]') {\n    return val;\n  }\n  if (Util._isBoolean(val)) {\n    return val;\n  }\n  return Object.prototype.toString.call(val);\n}\nexport function RGBComponent(val) {\n  if (val > 255) {\n    return 255;\n  } else if (val < 0) {\n    return 0;\n  }\n  return Math.round(val);\n}\nexport function alphaComponent(val) {\n  if (val > 1) {\n    return 1;\n  } else if (val < 0.0001) {\n    return 0.0001;\n  }\n  return val;\n}\nexport function getNumberValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util._isNumber(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number.');\n      }\n      return val;\n    };\n  }\n}\nexport function getNumberOrArrayOfNumbersValidator(noOfElements) {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      let isNumber = Util._isNumber(val);\n      let isValidArray = Util._isArray(val) && val.length == noOfElements;\n      if (!isNumber && !isValidArray) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or Array<number>(' + noOfElements + ')');\n      }\n      return val;\n    };\n  }\n}\nexport function getNumberOrAutoValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      var isNumber = Util._isNumber(val);\n      var isAuto = val === 'auto';\n      if (!(isNumber || isAuto)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a number or \"auto\".');\n      }\n      return val;\n    };\n  }\n}\nexport function getStringValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util._isString(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string.');\n      }\n      return val;\n    };\n  }\n}\nexport function getStringOrGradientValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      const isString = Util._isString(val);\n      const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' || val && val.addColorStop;\n      if (!(isString || isGradient)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a string or a native gradient.');\n      }\n      return val;\n    };\n  }\n}\nexport function getFunctionValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      if (!Util._isFunction(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a function.');\n      }\n      return val;\n    };\n  }\n}\nexport function getNumberArrayValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n      if (TypedArray && val instanceof TypedArray) {\n        return val;\n      }\n      if (!Util._isArray(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a array of numbers.');\n      } else {\n        val.forEach(function (item) {\n          if (!Util._isNumber(item)) {\n            Util.warn('\"' + attr + '\" attribute has non numeric element ' + item + '. Make sure that all elements are numbers.');\n          }\n        });\n      }\n      return val;\n    };\n  }\n}\nexport function getBooleanValidator() {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      var isBool = val === true || val === false;\n      if (!isBool) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be a boolean.');\n      }\n      return val;\n    };\n  }\n}\nexport function getComponentValidator(components) {\n  if (Konva.isUnminified) {\n    return function (val, attr) {\n      if (val === undefined || val === null) {\n        return val;\n      }\n      if (!Util.isObject(val)) {\n        Util.warn(_formatValue(val) + ' is a not valid value for \"' + attr + '\" attribute. The value should be an object with properties ' + components);\n      }\n      return val;\n    };\n  }\n}","map":{"version":3,"names":["Konva","Util","_formatValue","val","_isString","Object","prototype","toString","call","_isBoolean","RGBComponent","Math","round","alphaComponent","getNumberValidator","isUnminified","attr","_isNumber","warn","getNumberOrArrayOfNumbersValidator","noOfElements","isNumber","isValidArray","_isArray","length","getNumberOrAutoValidator","isAuto","getStringValidator","getStringOrGradientValidator","isString","isGradient","addColorStop","getFunctionValidator","_isFunction","getNumberArrayValidator","TypedArray","Int8Array","getPrototypeOf","forEach","item","getBooleanValidator","isBool","getComponentValidator","components","undefined","isObject"],"sources":["/Users/takahiro/Dev/webhack/node_modules/konva/lib/Validators.js"],"sourcesContent":["import { Konva } from './Global.js';\nimport { Util } from './Util.js';\nfunction _formatValue(val) {\n    if (Util._isString(val)) {\n        return '\"' + val + '\"';\n    }\n    if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n    }\n    if (Util._isBoolean(val)) {\n        return val;\n    }\n    return Object.prototype.toString.call(val);\n}\nexport function RGBComponent(val) {\n    if (val > 255) {\n        return 255;\n    }\n    else if (val < 0) {\n        return 0;\n    }\n    return Math.round(val);\n}\nexport function alphaComponent(val) {\n    if (val > 1) {\n        return 1;\n    }\n    else if (val < 0.0001) {\n        return 0.0001;\n    }\n    return val;\n}\nexport function getNumberValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isNumber(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number.');\n            }\n            return val;\n        };\n    }\n}\nexport function getNumberOrArrayOfNumbersValidator(noOfElements) {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            let isNumber = Util._isNumber(val);\n            let isValidArray = Util._isArray(val) && val.length == noOfElements;\n            if (!isNumber && !isValidArray) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or Array<number>(' +\n                    noOfElements +\n                    ')');\n            }\n            return val;\n        };\n    }\n}\nexport function getNumberOrAutoValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            var isNumber = Util._isNumber(val);\n            var isAuto = val === 'auto';\n            if (!(isNumber || isAuto)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a number or \"auto\".');\n            }\n            return val;\n        };\n    }\n}\nexport function getStringValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isString(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string.');\n            }\n            return val;\n        };\n    }\n}\nexport function getStringOrGradientValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            const isString = Util._isString(val);\n            const isGradient = Object.prototype.toString.call(val) === '[object CanvasGradient]' ||\n                (val && val.addColorStop);\n            if (!(isString || isGradient)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a string or a native gradient.');\n            }\n            return val;\n        };\n    }\n}\nexport function getFunctionValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (!Util._isFunction(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a function.');\n            }\n            return val;\n        };\n    }\n}\nexport function getNumberArrayValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            const TypedArray = Int8Array ? Object.getPrototypeOf(Int8Array) : null;\n            if (TypedArray && val instanceof TypedArray) {\n                return val;\n            }\n            if (!Util._isArray(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a array of numbers.');\n            }\n            else {\n                val.forEach(function (item) {\n                    if (!Util._isNumber(item)) {\n                        Util.warn('\"' +\n                            attr +\n                            '\" attribute has non numeric element ' +\n                            item +\n                            '. Make sure that all elements are numbers.');\n                    }\n                });\n            }\n            return val;\n        };\n    }\n}\nexport function getBooleanValidator() {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            var isBool = val === true || val === false;\n            if (!isBool) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be a boolean.');\n            }\n            return val;\n        };\n    }\n}\nexport function getComponentValidator(components) {\n    if (Konva.isUnminified) {\n        return function (val, attr) {\n            if (val === undefined || val === null) {\n                return val;\n            }\n            if (!Util.isObject(val)) {\n                Util.warn(_formatValue(val) +\n                    ' is a not valid value for \"' +\n                    attr +\n                    '\" attribute. The value should be an object with properties ' +\n                    components);\n            }\n            return val;\n        };\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}