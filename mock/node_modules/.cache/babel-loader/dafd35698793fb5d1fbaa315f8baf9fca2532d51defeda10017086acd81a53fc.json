{"ast":null,"code":"import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Group } from '../Group.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar ATTR_CHANGE_LIST = ['fontFamily', 'fontSize', 'fontStyle', 'padding', 'lineHeight', 'text', 'width', 'height', 'pointerDirection', 'pointerWidth', 'pointerHeight'],\n  CHANGE_KONVA = 'Change.konva',\n  NONE = 'none',\n  UP = 'up',\n  RIGHT = 'right',\n  DOWN = 'down',\n  LEFT = 'left',\n  attrChangeListLen = ATTR_CHANGE_LIST.length;\nexport class Label extends Group {\n  constructor(config) {\n    super(config);\n    this.on('add.konva', function (evt) {\n      this._addListeners(evt.child);\n      this._sync();\n    });\n  }\n  getText() {\n    return this.find('Text')[0];\n  }\n  getTag() {\n    return this.find('Tag')[0];\n  }\n  _addListeners(text) {\n    var that = this,\n      n;\n    var func = function () {\n      that._sync();\n    };\n    for (n = 0; n < attrChangeListLen; n++) {\n      text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n    }\n  }\n  getWidth() {\n    return this.getText().width();\n  }\n  getHeight() {\n    return this.getText().height();\n  }\n  _sync() {\n    var text = this.getText(),\n      tag = this.getTag(),\n      width,\n      height,\n      pointerDirection,\n      pointerWidth,\n      x,\n      y,\n      pointerHeight;\n    if (text && tag) {\n      width = text.width();\n      height = text.height();\n      pointerDirection = tag.pointerDirection();\n      pointerWidth = tag.pointerWidth();\n      pointerHeight = tag.pointerHeight();\n      x = 0;\n      y = 0;\n      switch (pointerDirection) {\n        case UP:\n          x = width / 2;\n          y = -1 * pointerHeight;\n          break;\n        case RIGHT:\n          x = width + pointerWidth;\n          y = height / 2;\n          break;\n        case DOWN:\n          x = width / 2;\n          y = height + pointerHeight;\n          break;\n        case LEFT:\n          x = -1 * pointerWidth;\n          y = height / 2;\n          break;\n      }\n      tag.setAttrs({\n        x: -1 * x,\n        y: -1 * y,\n        width: width,\n        height: height\n      });\n      text.setAttrs({\n        x: -1 * x,\n        y: -1 * y\n      });\n    }\n  }\n}\nLabel.prototype.className = 'Label';\n_registerNode(Label);\nexport class Tag extends Shape {\n  _sceneFunc(context) {\n    var width = this.width(),\n      height = this.height(),\n      pointerDirection = this.pointerDirection(),\n      pointerWidth = this.pointerWidth(),\n      pointerHeight = this.pointerHeight(),\n      cornerRadius = this.cornerRadius();\n    let topLeft = 0;\n    let topRight = 0;\n    let bottomLeft = 0;\n    let bottomRight = 0;\n    if (typeof cornerRadius === 'number') {\n      topLeft = topRight = bottomLeft = bottomRight = Math.min(cornerRadius, width / 2, height / 2);\n    } else {\n      topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n      topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n      bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n      bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n    }\n    context.beginPath();\n    context.moveTo(topLeft, 0);\n    if (pointerDirection === UP) {\n      context.lineTo((width - pointerWidth) / 2, 0);\n      context.lineTo(width / 2, -1 * pointerHeight);\n      context.lineTo((width + pointerWidth) / 2, 0);\n    }\n    context.lineTo(width - topRight, 0);\n    context.arc(width - topRight, topRight, topRight, Math.PI * 3 / 2, 0, false);\n    if (pointerDirection === RIGHT) {\n      context.lineTo(width, (height - pointerHeight) / 2);\n      context.lineTo(width + pointerWidth, height / 2);\n      context.lineTo(width, (height + pointerHeight) / 2);\n    }\n    context.lineTo(width, height - bottomRight);\n    context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n    if (pointerDirection === DOWN) {\n      context.lineTo((width + pointerWidth) / 2, height);\n      context.lineTo(width / 2, height + pointerHeight);\n      context.lineTo((width - pointerWidth) / 2, height);\n    }\n    context.lineTo(bottomLeft, height);\n    context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n    if (pointerDirection === LEFT) {\n      context.lineTo(0, (height + pointerHeight) / 2);\n      context.lineTo(-1 * pointerWidth, height / 2);\n      context.lineTo(0, (height - pointerHeight) / 2);\n    }\n    context.lineTo(0, topLeft);\n    context.arc(topLeft, topLeft, topLeft, Math.PI, Math.PI * 3 / 2, false);\n    context.closePath();\n    context.fillStrokeShape(this);\n  }\n  getSelfRect() {\n    var x = 0,\n      y = 0,\n      pointerWidth = this.pointerWidth(),\n      pointerHeight = this.pointerHeight(),\n      direction = this.pointerDirection(),\n      width = this.width(),\n      height = this.height();\n    if (direction === UP) {\n      y -= pointerHeight;\n      height += pointerHeight;\n    } else if (direction === DOWN) {\n      height += pointerHeight;\n    } else if (direction === LEFT) {\n      x -= pointerWidth * 1.5;\n      width += pointerWidth;\n    } else if (direction === RIGHT) {\n      width += pointerWidth * 1.5;\n    }\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  }\n}\nTag.prototype.className = 'Tag';\n_registerNode(Tag);\nFactory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory.addGetterSetter(Tag, 'pointerWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'pointerHeight', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));","map":{"version":3,"names":["Factory","Shape","Group","getNumberOrArrayOfNumbersValidator","getNumberValidator","_registerNode","ATTR_CHANGE_LIST","CHANGE_KONVA","NONE","UP","RIGHT","DOWN","LEFT","attrChangeListLen","length","Label","constructor","config","on","evt","_addListeners","child","_sync","getText","find","getTag","text","that","n","func","getWidth","width","getHeight","height","tag","pointerDirection","pointerWidth","x","y","pointerHeight","setAttrs","prototype","className","Tag","_sceneFunc","context","cornerRadius","topLeft","topRight","bottomLeft","bottomRight","Math","min","beginPath","moveTo","lineTo","arc","PI","closePath","fillStrokeShape","getSelfRect","direction","addGetterSetter"],"sources":["/Users/takahiro/Dev/webhack/node_modules/konva/lib/shapes/Label.js"],"sourcesContent":["import { Factory } from '../Factory.js';\nimport { Shape } from '../Shape.js';\nimport { Group } from '../Group.js';\nimport { getNumberOrArrayOfNumbersValidator, getNumberValidator, } from '../Validators.js';\nimport { _registerNode } from '../Global.js';\nvar ATTR_CHANGE_LIST = [\n    'fontFamily',\n    'fontSize',\n    'fontStyle',\n    'padding',\n    'lineHeight',\n    'text',\n    'width',\n    'height',\n    'pointerDirection',\n    'pointerWidth',\n    'pointerHeight',\n], CHANGE_KONVA = 'Change.konva', NONE = 'none', UP = 'up', RIGHT = 'right', DOWN = 'down', LEFT = 'left', attrChangeListLen = ATTR_CHANGE_LIST.length;\nexport class Label extends Group {\n    constructor(config) {\n        super(config);\n        this.on('add.konva', function (evt) {\n            this._addListeners(evt.child);\n            this._sync();\n        });\n    }\n    getText() {\n        return this.find('Text')[0];\n    }\n    getTag() {\n        return this.find('Tag')[0];\n    }\n    _addListeners(text) {\n        var that = this, n;\n        var func = function () {\n            that._sync();\n        };\n        for (n = 0; n < attrChangeListLen; n++) {\n            text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n        }\n    }\n    getWidth() {\n        return this.getText().width();\n    }\n    getHeight() {\n        return this.getText().height();\n    }\n    _sync() {\n        var text = this.getText(), tag = this.getTag(), width, height, pointerDirection, pointerWidth, x, y, pointerHeight;\n        if (text && tag) {\n            width = text.width();\n            height = text.height();\n            pointerDirection = tag.pointerDirection();\n            pointerWidth = tag.pointerWidth();\n            pointerHeight = tag.pointerHeight();\n            x = 0;\n            y = 0;\n            switch (pointerDirection) {\n                case UP:\n                    x = width / 2;\n                    y = -1 * pointerHeight;\n                    break;\n                case RIGHT:\n                    x = width + pointerWidth;\n                    y = height / 2;\n                    break;\n                case DOWN:\n                    x = width / 2;\n                    y = height + pointerHeight;\n                    break;\n                case LEFT:\n                    x = -1 * pointerWidth;\n                    y = height / 2;\n                    break;\n            }\n            tag.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n                width: width,\n                height: height,\n            });\n            text.setAttrs({\n                x: -1 * x,\n                y: -1 * y,\n            });\n        }\n    }\n}\nLabel.prototype.className = 'Label';\n_registerNode(Label);\nexport class Tag extends Shape {\n    _sceneFunc(context) {\n        var width = this.width(), height = this.height(), pointerDirection = this.pointerDirection(), pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), cornerRadius = this.cornerRadius();\n        let topLeft = 0;\n        let topRight = 0;\n        let bottomLeft = 0;\n        let bottomRight = 0;\n        if (typeof cornerRadius === 'number') {\n            topLeft =\n                topRight =\n                    bottomLeft =\n                        bottomRight =\n                            Math.min(cornerRadius, width / 2, height / 2);\n        }\n        else {\n            topLeft = Math.min(cornerRadius[0] || 0, width / 2, height / 2);\n            topRight = Math.min(cornerRadius[1] || 0, width / 2, height / 2);\n            bottomRight = Math.min(cornerRadius[2] || 0, width / 2, height / 2);\n            bottomLeft = Math.min(cornerRadius[3] || 0, width / 2, height / 2);\n        }\n        context.beginPath();\n        context.moveTo(topLeft, 0);\n        if (pointerDirection === UP) {\n            context.lineTo((width - pointerWidth) / 2, 0);\n            context.lineTo(width / 2, -1 * pointerHeight);\n            context.lineTo((width + pointerWidth) / 2, 0);\n        }\n        context.lineTo(width - topRight, 0);\n        context.arc(width - topRight, topRight, topRight, (Math.PI * 3) / 2, 0, false);\n        if (pointerDirection === RIGHT) {\n            context.lineTo(width, (height - pointerHeight) / 2);\n            context.lineTo(width + pointerWidth, height / 2);\n            context.lineTo(width, (height + pointerHeight) / 2);\n        }\n        context.lineTo(width, height - bottomRight);\n        context.arc(width - bottomRight, height - bottomRight, bottomRight, 0, Math.PI / 2, false);\n        if (pointerDirection === DOWN) {\n            context.lineTo((width + pointerWidth) / 2, height);\n            context.lineTo(width / 2, height + pointerHeight);\n            context.lineTo((width - pointerWidth) / 2, height);\n        }\n        context.lineTo(bottomLeft, height);\n        context.arc(bottomLeft, height - bottomLeft, bottomLeft, Math.PI / 2, Math.PI, false);\n        if (pointerDirection === LEFT) {\n            context.lineTo(0, (height + pointerHeight) / 2);\n            context.lineTo(-1 * pointerWidth, height / 2);\n            context.lineTo(0, (height - pointerHeight) / 2);\n        }\n        context.lineTo(0, topLeft);\n        context.arc(topLeft, topLeft, topLeft, Math.PI, (Math.PI * 3) / 2, false);\n        context.closePath();\n        context.fillStrokeShape(this);\n    }\n    getSelfRect() {\n        var x = 0, y = 0, pointerWidth = this.pointerWidth(), pointerHeight = this.pointerHeight(), direction = this.pointerDirection(), width = this.width(), height = this.height();\n        if (direction === UP) {\n            y -= pointerHeight;\n            height += pointerHeight;\n        }\n        else if (direction === DOWN) {\n            height += pointerHeight;\n        }\n        else if (direction === LEFT) {\n            x -= pointerWidth * 1.5;\n            width += pointerWidth;\n        }\n        else if (direction === RIGHT) {\n            width += pointerWidth * 1.5;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n        };\n    }\n}\nTag.prototype.className = 'Tag';\n_registerNode(Tag);\nFactory.addGetterSetter(Tag, 'pointerDirection', NONE);\nFactory.addGetterSetter(Tag, 'pointerWidth', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'pointerHeight', 0, getNumberValidator());\nFactory.addGetterSetter(Tag, 'cornerRadius', 0, getNumberOrArrayOfNumbersValidator(4));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}