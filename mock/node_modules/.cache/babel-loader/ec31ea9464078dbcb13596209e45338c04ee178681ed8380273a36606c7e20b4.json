{"ast":null,"code":"var _jsxFileName = \"/Users/takahiro/Dev/webhack/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case \"REGISTER_START\":\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case \"REGISTER_SUCCESS\":\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case \"REGISTER_FAILURE\":\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case \"CLEAR_ERROR\":\n      return {\n        ...state,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const login = async formData => {\n    dispatch({\n      type: \"LOGIN_START\"\n    });\n    try {\n      // モック実装：実際のAPI呼び出しに置き換える\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // ダミーユーザーデータ\n      const mockUser = {\n        id: \"1\",\n        email: formData.email,\n        name: \"テストユーザー\",\n        company: \"テスト株式会社\",\n        jobTitle: \"エンジニア\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        isDeleted: false\n      };\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: mockUser\n      });\n    } catch (error) {\n      dispatch({\n        type: \"LOGIN_FAILURE\",\n        payload: \"ログインに失敗しました\"\n      });\n    }\n  };\n  const register = async formData => {\n    dispatch({\n      type: \"REGISTER_START\"\n    });\n    try {\n      // モック実装：実際のAPI呼び出しに置き換える\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // ダミーユーザーデータ\n      const mockUser = {\n        id: \"1\",\n        email: formData.email,\n        name: formData.name,\n        company: formData.company,\n        jobTitle: formData.jobTitle,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        isDeleted: false\n      };\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: mockUser\n      });\n    } catch (error) {\n      dispatch({\n        type: \"REGISTER_FAILURE\",\n        payload: \"登録に失敗しました\"\n      });\n    }\n  };\n  const logout = () => {\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  };\n  const clearError = () => {\n    dispatch({\n      type: \"CLEAR_ERROR\"\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","isLoading","error","authReducer","state","action","type","payload","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","dispatch","login","formData","Promise","resolve","setTimeout","mockUser","id","email","name","company","jobTitle","createdAt","Date","updatedAt","isDeleted","register","logout","clearError","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/takahiro/Dev/webhack/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from \"react\";\nimport { AuthState, User, LoginForm, RegisterForm } from \"../types\";\n\ntype AuthAction =\n  | { type: \"LOGIN_START\" }\n  | { type: \"LOGIN_SUCCESS\"; payload: User }\n  | { type: \"LOGIN_FAILURE\"; payload: string }\n  | { type: \"LOGOUT\" }\n  | { type: \"REGISTER_START\" }\n  | { type: \"REGISTER_SUCCESS\"; payload: User }\n  | { type: \"REGISTER_FAILURE\"; payload: string }\n  | { type: \"CLEAR_ERROR\" };\n\nconst initialState: AuthState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n};\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case \"LOGOUT\":\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null,\n      };\n    case \"REGISTER_START\":\n      return {\n        ...state,\n        isLoading: true,\n        error: null,\n      };\n    case \"REGISTER_SUCCESS\":\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      };\n    case \"REGISTER_FAILURE\":\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload,\n      };\n    case \"CLEAR_ERROR\":\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\ninterface AuthContextType extends AuthState {\n  login: (formData: LoginForm) => Promise<void>;\n  register: (formData: RegisterForm) => Promise<void>;\n  logout: () => void;\n  clearError: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  const login = async (formData: LoginForm) => {\n    dispatch({ type: \"LOGIN_START\" });\n\n    try {\n      // モック実装：実際のAPI呼び出しに置き換える\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // ダミーユーザーデータ\n      const mockUser: User = {\n        id: \"1\",\n        email: formData.email,\n        name: \"テストユーザー\",\n        company: \"テスト株式会社\",\n        jobTitle: \"エンジニア\",\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        isDeleted: false,\n      };\n\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: mockUser });\n    } catch (error) {\n      dispatch({ type: \"LOGIN_FAILURE\", payload: \"ログインに失敗しました\" });\n    }\n  };\n\n  const register = async (formData: RegisterForm) => {\n    dispatch({ type: \"REGISTER_START\" });\n\n    try {\n      // モック実装：実際のAPI呼び出しに置き換える\n      await new Promise((resolve) => setTimeout(resolve, 1000));\n\n      // ダミーユーザーデータ\n      const mockUser: User = {\n        id: \"1\",\n        email: formData.email,\n        name: formData.name,\n        company: formData.company,\n        jobTitle: formData.jobTitle,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n        isDeleted: false,\n      };\n\n      dispatch({ type: \"REGISTER_SUCCESS\", payload: mockUser });\n    } catch (error) {\n      dispatch({ type: \"REGISTER_FAILURE\", payload: \"登録に失敗しました\" });\n    }\n  };\n\n  const logout = () => {\n    dispatch({ type: \"LOGOUT\" });\n  };\n\n  const clearError = () => {\n    dispatch({ type: \"CLEAR_ERROR\" });\n  };\n\n  const value: AuthContextType = {\n    ...state,\n    login,\n    register,\n    logout,\n    clearError,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}