{"ast":null,"code":"var PI_OVER_180 = Math.PI / 180;\nfunction detectBrowser() {\n  return typeof window !== 'undefined' && ({}.toString.call(window) === '[object Window]' || {}.toString.call(window) === '[object global]');\n}\nexport const glob = typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof WorkerGlobalScope !== 'undefined' ? self : {};\nexport const Konva = {\n  _global: glob,\n  version: '8.4.3',\n  isBrowser: detectBrowser(),\n  isUnminified: /param/.test(function (param) {}.toString()),\n  dblClickWindow: 400,\n  getAngle(angle) {\n    return Konva.angleDeg ? angle * PI_OVER_180 : angle;\n  },\n  enableTrace: false,\n  pointerEventsEnabled: true,\n  autoDrawEnabled: true,\n  hitOnDragEnabled: false,\n  capturePointerEventsEnabled: false,\n  _mouseListenClick: false,\n  _touchListenClick: false,\n  _pointerListenClick: false,\n  _mouseInDblClickWindow: false,\n  _touchInDblClickWindow: false,\n  _pointerInDblClickWindow: false,\n  _mouseDblClickPointerId: null,\n  _touchDblClickPointerId: null,\n  _pointerDblClickPointerId: null,\n  pixelRatio: typeof window !== 'undefined' && window.devicePixelRatio || 1,\n  dragDistance: 3,\n  angleDeg: true,\n  showWarnings: true,\n  dragButtons: [0, 1],\n  isDragging() {\n    return Konva['DD'].isDragging;\n  },\n  isDragReady() {\n    return !!Konva['DD'].node;\n  },\n  releaseCanvasOnDestroy: true,\n  document: glob.document,\n  _injectGlobal(Konva) {\n    glob.Konva = Konva;\n  }\n};\nexport const _registerNode = NodeClass => {\n  Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\nKonva._injectGlobal(Konva);","map":{"version":3,"names":["PI_OVER_180","Math","PI","detectBrowser","window","toString","call","glob","global","WorkerGlobalScope","self","Konva","_global","version","isBrowser","isUnminified","test","param","dblClickWindow","getAngle","angle","angleDeg","enableTrace","pointerEventsEnabled","autoDrawEnabled","hitOnDragEnabled","capturePointerEventsEnabled","_mouseListenClick","_touchListenClick","_pointerListenClick","_mouseInDblClickWindow","_touchInDblClickWindow","_pointerInDblClickWindow","_mouseDblClickPointerId","_touchDblClickPointerId","_pointerDblClickPointerId","pixelRatio","devicePixelRatio","dragDistance","showWarnings","dragButtons","isDragging","isDragReady","node","releaseCanvasOnDestroy","document","_injectGlobal","_registerNode","NodeClass","prototype","getClassName"],"sources":["/Users/takahiro/Dev/webhack/node_modules/konva/lib/Global.js"],"sourcesContent":["var PI_OVER_180 = Math.PI / 180;\nfunction detectBrowser() {\n    return (typeof window !== 'undefined' &&\n        ({}.toString.call(window) === '[object Window]' ||\n            {}.toString.call(window) === '[object global]'));\n}\nexport const glob = typeof global !== 'undefined'\n    ? global\n    : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined'\n            ? self\n            : {};\nexport const Konva = {\n    _global: glob,\n    version: '8.4.3',\n    isBrowser: detectBrowser(),\n    isUnminified: /param/.test(function (param) { }.toString()),\n    dblClickWindow: 400,\n    getAngle(angle) {\n        return Konva.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    enableTrace: false,\n    pointerEventsEnabled: true,\n    autoDrawEnabled: true,\n    hitOnDragEnabled: false,\n    capturePointerEventsEnabled: false,\n    _mouseListenClick: false,\n    _touchListenClick: false,\n    _pointerListenClick: false,\n    _mouseInDblClickWindow: false,\n    _touchInDblClickWindow: false,\n    _pointerInDblClickWindow: false,\n    _mouseDblClickPointerId: null,\n    _touchDblClickPointerId: null,\n    _pointerDblClickPointerId: null,\n    pixelRatio: (typeof window !== 'undefined' && window.devicePixelRatio) || 1,\n    dragDistance: 3,\n    angleDeg: true,\n    showWarnings: true,\n    dragButtons: [0, 1],\n    isDragging() {\n        return Konva['DD'].isDragging;\n    },\n    isDragReady() {\n        return !!Konva['DD'].node;\n    },\n    releaseCanvasOnDestroy: true,\n    document: glob.document,\n    _injectGlobal(Konva) {\n        glob.Konva = Konva;\n    },\n};\nexport const _registerNode = (NodeClass) => {\n    Konva[NodeClass.prototype.getClassName()] = NodeClass;\n};\nKonva._injectGlobal(Konva);\n"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;AAC/B,SAASC,aAAaA,CAAA,EAAG;EACrB,OAAQ,OAAOC,MAAM,KAAK,WAAW,KAChC,CAAC,CAAC,CAACC,QAAQ,CAACC,IAAI,CAACF,MAAM,CAAC,KAAK,iBAAiB,IAC3C,CAAC,CAAC,CAACC,QAAQ,CAACC,IAAI,CAACF,MAAM,CAAC,KAAK,iBAAiB,CAAC;AAC3D;AACA,OAAO,MAAMG,IAAI,GAAG,OAAOC,MAAM,KAAK,WAAW,GAC3CA,MAAM,GACN,OAAOJ,MAAM,KAAK,WAAW,GACzBA,MAAM,GACN,OAAOK,iBAAiB,KAAK,WAAW,GACpCC,IAAI,GACJ,CAAC,CAAC;AAChB,OAAO,MAAMC,KAAK,GAAG;EACjBC,OAAO,EAAEL,IAAI;EACbM,OAAO,EAAE,OAAO;EAChBC,SAAS,EAAEX,aAAa,CAAC,CAAC;EAC1BY,YAAY,EAAE,OAAO,CAACC,IAAI,CAAC,UAAUC,KAAK,EAAE,CAAE,CAAC,CAACZ,QAAQ,CAAC,CAAC,CAAC;EAC3Da,cAAc,EAAE,GAAG;EACnBC,QAAQA,CAACC,KAAK,EAAE;IACZ,OAAOT,KAAK,CAACU,QAAQ,GAAGD,KAAK,GAAGpB,WAAW,GAAGoB,KAAK;EACvD,CAAC;EACDE,WAAW,EAAE,KAAK;EAClBC,oBAAoB,EAAE,IAAI;EAC1BC,eAAe,EAAE,IAAI;EACrBC,gBAAgB,EAAE,KAAK;EACvBC,2BAA2B,EAAE,KAAK;EAClCC,iBAAiB,EAAE,KAAK;EACxBC,iBAAiB,EAAE,KAAK;EACxBC,mBAAmB,EAAE,KAAK;EAC1BC,sBAAsB,EAAE,KAAK;EAC7BC,sBAAsB,EAAE,KAAK;EAC7BC,wBAAwB,EAAE,KAAK;EAC/BC,uBAAuB,EAAE,IAAI;EAC7BC,uBAAuB,EAAE,IAAI;EAC7BC,yBAAyB,EAAE,IAAI;EAC/BC,UAAU,EAAG,OAAOhC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACiC,gBAAgB,IAAK,CAAC;EAC3EC,YAAY,EAAE,CAAC;EACfjB,QAAQ,EAAE,IAAI;EACdkB,YAAY,EAAE,IAAI;EAClBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EACnBC,UAAUA,CAAA,EAAG;IACT,OAAO9B,KAAK,CAAC,IAAI,CAAC,CAAC8B,UAAU;EACjC,CAAC;EACDC,WAAWA,CAAA,EAAG;IACV,OAAO,CAAC,CAAC/B,KAAK,CAAC,IAAI,CAAC,CAACgC,IAAI;EAC7B,CAAC;EACDC,sBAAsB,EAAE,IAAI;EAC5BC,QAAQ,EAAEtC,IAAI,CAACsC,QAAQ;EACvBC,aAAaA,CAACnC,KAAK,EAAE;IACjBJ,IAAI,CAACI,KAAK,GAAGA,KAAK;EACtB;AACJ,CAAC;AACD,OAAO,MAAMoC,aAAa,GAAIC,SAAS,IAAK;EACxCrC,KAAK,CAACqC,SAAS,CAACC,SAAS,CAACC,YAAY,CAAC,CAAC,CAAC,GAAGF,SAAS;AACzD,CAAC;AACDrC,KAAK,CAACmC,aAAa,CAACnC,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}